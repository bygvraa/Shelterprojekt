@page "/form"
@using Shelterprojekt.Shared.Models
@inject HttpClient Http

<button id="formbutton" @onclick="@AddBooking">Indlæs form</button>

@if (isAdd)
{
@if (BookingList == null)
{
    <p><em>Indlæser form...</em></p>
    <br />
}
else
{
    <EditForm Model="@booking" OnSubmit="@SaveBooking">
        <div class="modal" tabindex="-1" style="display:block" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title">@ModalTitle</h3>
                        <button type="button" class="close" @onclick="@this.CloseModal">
                            <span aria-hidden="true">x</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form>
                            <div class="form-group">

                                <label for="shelter">
                                    Shelter
                                    <InputSelect @bind-Value="@booking.shelterId">
                                        <option value="">--- Vælg shelter ---</option>
                                        @foreach (var shelter in this.ShelterList)
                                            {
                                            <option value="@shelter.Id">@shelter.properties.navn</option>
                                            }
                                    </InputSelect>
                                </label>

                                <label for="dato">
                                    Dato
                                    <InputDate @bind-Value="@booking.dato"
                                               DisplayName="Dato"
                                               ParsingErrorMessage="The {0} field has an incorrect date value." />
                                </label>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="submit">Submit</button>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
}
    if (isDelete == true)
    {
    }
}


@code {

    protected string ModalTitle { get; set; }

    protected List<Booking> BookingList;
    protected List<Shelter> ShelterList;

    protected Booking booking = new() { dato = DateTime.UtcNow };

    protected Boolean isDelete = false;
    protected Boolean isAdd = false;

    protected async Task GetBookings()
    {
        BookingList = await Http.GetJsonAsync<List<Booking>>("api/booking/index");
    }

    protected async Task GetShelters()
    {
        ShelterList = await Http.GetJsonAsync<List<Shelter>>("api/shelter/index");
    }

    protected async Task AddBooking()
    {
        booking = new() { dato = DateTime.UtcNow };
        this.ModalTitle = "Add Booking";
        this.isAdd = true;
        await GetBookings().ConfigureAwait(false);

    }

    protected async Task SaveBooking()
    {
        if (booking.Id != null)
        {
            await Http.SendJsonAsync(HttpMethod.Put, "api/booking/edit", booking);
        }
        else
        {
            await Http.SendJsonAsync(HttpMethod.Post, "/api/booking/create", booking);
        }
        await GetBookings();
    }

    protected void CloseModal()
    {
        this.isAdd = false;
        this.isDelete = false;
    }



    protected override async Task OnInitializedAsync()
    {
        await GetBookings();
        await GetShelters();
    }

}
