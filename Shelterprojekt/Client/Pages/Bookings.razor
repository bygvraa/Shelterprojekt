@page "/bookings"
@using Shelterprojekt.Shared.Models
@inject HttpClient Http

<h1>Bookings</h1>
<br />

<div>
    <div style="float:right; margin-bottom:5px">
        <button class="btn btn-primary" @onclick="@AddBooking">Add Booking</button>
    </div>
</div>
<br />

@if (BookingList == null)
{
    <p><em>Indlæser bookings...</em></p>
    <br />
    <img style="margin-left: 50px" width="80" src="loading.gif" />

}
else
{
    <table class='table'>
        <thead>
            <tr>
                <th>Shelter</th>
                <th>Dato</th>
                <th>Låner</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var booking in BookingList)
            {
                <tr>
                    <td>@booking.ShelterNavn</td>
                    <td>@booking.Dato.ToShortDateString()</td>
                    <td>@booking.Brugernavn</td>
                    <td>
                        <button class="btn btn-info" @onclick="@(async () => await EditBooking(booking.Id))">
                            Rediger
                        </button>
                        <button class="btn btn-danger" @onclick="@(async () => await DeleteConfirmation(booking.Id))">
                            Slet
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    if (isAdd)
    {
        <div class="modal" tabindex="-1" style="display:block" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title">@ModalTitle</h3>
                        <button type="button" class="close" @onclick="@this.CloseModal">
                            <span aria-hidden="true">x</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form>
                            <div class="form-group">

                                <label asp-for="shelter" class="control-label">
                                    Shelter
                                </label>
                                <select asp-for="shelter" class="form-control" @bind="@booking.ShelterId">
                                    <option value="">-- Vælg shelter --</option>
                                    @foreach (var Shelter in this.ShelterList)
                                    {
                                        <option value="@Shelter.Id">@Shelter.Properties.Navn</option>

                                    }
                                </select>
                                <br />

                                <label for="dato" class="control-label">
                                    Dato
                                </label>
                                <input type="date" for="dato" class="form-control" @bind="@booking.Dato" />
                                <br />

                                <label for="brugerNavn" class="control-label">
                                    Brugernavn
                                </label>
                                <input type="text" for="brugerNavn" class="form-control" @bind="@booking.Brugernavn" />


                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-block btn-success" @onclick="@(async () => await SaveBooking())" data-dismiss="modal">
                            Gem booking
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
    if (isDelete == true)
    {
        <div class="modal" tabindex="-1" style="display:block" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title">@ModalTitle</h3>
                    </div>
                    <div class="modal-body">
                        <h4>Do you confirm delete this booking?</h4>
                        <table class="table">
                            <tr>
                                <td>Shelter</td>
                                <td>@booking.ShelterNavn</td>
                            </tr>
                            <tr>
                                <td>Dato</td>
                                <td>@booking.Dato</td>
                            </tr>
                        </table>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-danger" @onclick="@(async () => await DeleteBooking(booking.Id))" data-dismiss="modal">
                            Confirm
                        </button>
                        <button class="btn btn-warning" @onclick="@CloseModal">
                            Cancel
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
}

@code{

    protected string ModalTitle { get; set; }
    protected string SearchString { get; set; }

    protected List<Booking> BookingList;
    protected List<Shelter> ShelterList;

    protected Booking booking = new() { Dato = DateTime.UtcNow };
    protected Shelter shelter = new Shelter();

    protected Boolean isDelete = false;
    protected Boolean isAdd = false;


    protected async Task GetBookings()
    {
        BookingList = await Http.GetJsonAsync<List<Booking>>("api/booking/index");
    }

    protected async Task GetShelters()
    {
        ShelterList = await Http.GetJsonAsync<List<Shelter>>("api/shelter/index");
    }


    protected async Task AddBooking()
    {
        booking = new() { Dato = DateTime.Now };
        this.ModalTitle = "Tilføj Booking";
        this.isAdd = true;
        await GetBookings().ConfigureAwait(false);
    }

    protected async Task EditBooking(string id)
    {
        booking = await Http.GetJsonAsync<Booking>("/api/booking/details/" + id);
        this.ModalTitle = "Rediger Booking";
        this.isAdd = true;
        await GetBookings().ConfigureAwait(false);
    }

    protected async Task SaveBooking()
    {
        if (booking.Id != null)
        {
            await Http.SendJsonAsync(HttpMethod.Put, "/api/booking/edit", booking);
        }
        else
        {
            await Http.SendJsonAsync(HttpMethod.Post, "/api/booking/create", booking);
        }
        this.isAdd = false;
        await GetBookings();
    }

    protected async Task DeleteConfirmation(string id)
    {
        ModalTitle = "Delete Booking";
        booking = await Http.GetJsonAsync<Booking>("/api/booking/details/" + id);
        this.isDelete = true;
    }

    protected async Task DeleteBooking(string id)
    {
        await Http.DeleteAsync("/api/booking/delete/" + id);
        this.isDelete = false;
        await GetBookings();
    }


    protected async Task FindShelter(string id)
    {
        shelter = await Http.GetJsonAsync<Shelter>("/api/shelter/details" + id);
        await GetShelters().ConfigureAwait(false);
    }


    protected void CloseModal()
    {
        this.isAdd = false;
        this.isDelete = false;
    }


    protected override async Task OnInitializedAsync()
    {
        await GetBookings();
        await GetShelters();
    }
}